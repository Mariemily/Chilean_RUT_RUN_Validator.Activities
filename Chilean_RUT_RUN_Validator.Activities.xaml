<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Variable Booleana que especifica si el dígito verificador entregado es correcto." Name="out_BlnDigRut" Type="OutArgument(x:Boolean)" />
    <x:Property sap2010:Annotation.AnnotationText="Dígito verificador ingresado." Name="in_DigitoVerificador" Type="InArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Dígito Verificador resultante." Name="out_StrDigResultante" Type="OutArgument(x:String)" />
    <x:Property sap2010:Annotation.AnnotationText="Rut sin dígito verificador" Name="in_RutSinDigitoVerificador" Type="InArgument(x:Int32)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap2010:Annotation.AnnotationText>UPTF00000088eyI8SGVscExpbms+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8SW5pdGlhbFRvb2x0aXA+a19fQmFja2luZ0ZpZWxkIjpudWxsLCI8VmVyc2lvbj5rX19CYWNraW5nRmllbGQiOjF9</sap2010:Annotation.AnnotationText>
  <sap:VirtualizedContainerService.HintSize>1234,2603</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Reflection</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.CV</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.IntelligentOCR</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="VerificarDigitoRut" sap:VirtualizedContainerService.HintSize="606,2538" sap2010:WorkflowViewState.IdRef="Sequence_2">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Int32" Name="IntMultiplo" />
      <Variable x:TypeArguments="x:Int32" Name="IntContador" />
      <Variable x:TypeArguments="x:Double" Name="DblAuxiliar" />
      <Variable x:TypeArguments="x:Double" Name="DblAux1" />
      <Variable x:TypeArguments="x:String" sap2010:Annotation.AnnotationText="Rut Chileno sin dígito verificador. No debe contener puntos, espacios o -" Name="Rut_SinDigito" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Assign DisplayName="Assign si esta vacía la entrada" sap:VirtualizedContainerService.HintSize="544,82" sap2010:WorkflowViewState.IdRef="Assign_12">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[in_DigitoVerificador]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[if( IsNothing(in_DigitoVerificador) OrElse in_DigitoVerificador.trim.Length=0,"",in_DigitoVerificador.Trim.ToUpper)]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Assign limpiar" sap:VirtualizedContainerService.HintSize="544,82" sap2010:WorkflowViewState.IdRef="Assign_13">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[Rut_SinDigito]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[in_RutSinDigitoVerificador.ToString.Trim]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Inicializar Bln sobre dígito verificador" sap:VirtualizedContainerService.HintSize="544,82" sap2010:WorkflowViewState.IdRef="Assign_6">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[out_BlnDigRut]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Digito Verificador inicializar" sap:VirtualizedContainerService.HintSize="544,82" sap2010:WorkflowViewState.IdRef="Assign_7">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[out_StrDigResultante]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">
          <Literal x:TypeArguments="x:String" Value="" />
        </InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Asignar Multiplo Inicial" sap:VirtualizedContainerService.HintSize="544,82" sap2010:WorkflowViewState.IdRef="Assign_1">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">[IntMultiplo]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">2</InArgument>
      </Assign.Value>
    </Assign>
    <ui:ForEach x:TypeArguments="x:Char" CurrentIndex="[IntContador]" DisplayName="Para cada digito del rut" sap:VirtualizedContainerService.HintSize="544,742" sap2010:WorkflowViewState.IdRef="ForEach`1_2" Values="[Rut_SinDigito.ToArray]">
      <ui:ForEach.Body>
        <ActivityAction x:TypeArguments="x:Char">
          <ActivityAction.Argument>
            <DelegateInArgument x:TypeArguments="x:Char" Name="Digito" />
          </ActivityAction.Argument>
          <Sequence DisplayName="Cuerpo calculos para el dígito del rut" sap:VirtualizedContainerService.HintSize="510,556" sap2010:WorkflowViewState.IdRef="Sequence_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign DisplayName="Asignar variable auxiliar" sap:VirtualizedContainerService.HintSize="468,82" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Double">[DblAuxiliar]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Double">[DblAuxiliar+Val(Mid(Rut_SinDigito, Len(Rut_SinDigito) - IntContador, 1)) * IntMultiplo]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[IntMultiplo&gt;6]" DisplayName="Si el múltiplo es mayor a 6" sap:VirtualizedContainerService.HintSize="468,346" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Assign DisplayName="Asignar reinicializar contador" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[IntMultiplo]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">2</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign DisplayName="Asignar aumentar contador" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:Int32">[IntMultiplo]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:Int32">[IntMultiplo+1]</InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
          </Sequence>
        </ActivityAction>
      </ui:ForEach.Body>
    </ui:ForEach>
    <Assign DisplayName="Asignar variable auxiliar resultante" sap:VirtualizedContainerService.HintSize="544,82" sap2010:WorkflowViewState.IdRef="Assign_5">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Double">[DblAux1]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Double">[11-(DblAuxiliar mod 11)]</InArgument>
      </Assign.Value>
    </Assign>
    <If Condition="[DblAux1&lt;10]" DisplayName="Determinar el dígito verificador cuando el mod es menor que 10" sap:VirtualizedContainerService.HintSize="544,610" sap2010:WorkflowViewState.IdRef="If_2">
      <If.Then>
        <Assign DisplayName="Digito Verificador" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_8">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">[out_StrDigResultante]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">[DblAux1.ToString]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Then>
      <If.Else>
        <If Condition="[DblAux1=10]" DisplayName="Si es igual a 10" sap:VirtualizedContainerService.HintSize="468,346" sap2010:WorkflowViewState.IdRef="If_3">
          <If.Then>
            <Assign DisplayName="Digito Verificador cuando es K" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_9">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_StrDigResultante]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">K</InArgument>
              </Assign.Value>
            </Assign>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Digito Verificador cuando es 0" sap:VirtualizedContainerService.HintSize="434,82" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">[out_StrDigResultante]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">0</InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
      </If.Else>
    </If>
    <Assign DisplayName="Assign determinar validez del dígito verificador" sap:VirtualizedContainerService.HintSize="544,82" sap2010:WorkflowViewState.IdRef="Assign_11">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Boolean">[out_BlnDigRut]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Boolean">[if(in_DigitoVerificador.Trim.ToUpper.Equals(out_StrDigResultante.Trim),true,false)]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:LogMessage DisplayName="Log Message el dígito verificar es:" sap:VirtualizedContainerService.HintSize="544,141" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;El dígito verificador es: &quot;+out_BlnDigRut.ToString]" />
  </Sequence>
</Activity>